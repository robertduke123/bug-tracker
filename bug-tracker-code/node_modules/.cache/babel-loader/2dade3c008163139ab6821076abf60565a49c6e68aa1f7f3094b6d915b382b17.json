{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\robdu\\\\Desktop\\\\port\\\\bug\\\\bug-tracker-v2\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport SignIn from './components/Signin';\nimport Register from './components/Register';\nimport Sidebar from './components/Sidebar';\nimport Navbar from './components/Navbar';\nimport NewProject from './components/NewProject';\nimport NewMember from './components/NewMember';\nimport NewTicket from './components/NewTicket';\nimport Profile from './components/Profile';\nimport Dashboard from './components/Dashboard';\nimport Project from './components/Project';\nimport Tickets from './components/Tickets';\nimport Team from './components/Team';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          firstName: data.first_name,\n          lastName: data.last_name,\n          phone: data.phone,\n          email: data.email,\n          position: data.position\n        }\n      });\n    };\n    this.loadProjectState = () => {\n      fetch('http://localhost:3000/projects').then(res => res.json()).then(data => {\n        if (data.length > 0) {\n          this.setState({\n            projects: data\n          });\n        }\n      });\n    };\n    this.loadTeamState = () => {\n      fetch('http://localhost:3000/team').then(res => res.json()).then(data => {\n        if (data.length > 0) {\n          let state = [];\n          data.forEach(member => {\n            state.push({\n              id: member.id,\n              firstName: member.first_name,\n              lastName: member.last_name,\n              phone: member.phone,\n              email: member.email,\n              position: member.position\n            });\n          });\n          this.setState({\n            team: state\n          });\n        }\n      });\n    };\n    this.routeChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n    this.newFormControl = (e, control, edit) => {\n      this.setState({\n        newForm: control\n      });\n      if (edit) {\n        if (control === 'project') {\n          this.setState({\n            edit: {\n              project: this.state.projects[this.state.projects.findIndex(object => {\n                return object.name === e.target.parentNode.parentNode.firstChild.innerHTML;\n              })],\n              state: true\n            }\n          });\n        } else if (control === 'ticket') {\n          let project = document.querySelector('.project-title h1').innerHTML;\n          let projectIndex = this.state.projects.findIndex(object => {\n            return object.name === project;\n          });\n          let ticketIndex = this.state.projects[projectIndex].tickets.findIndex(object => {\n            return object.ticketTitle === e.target.parentNode.parentNode.firstChild.innerHTML;\n          });\n          this.setState({\n            edit: {\n              project: this.state.projects[projectIndex].tickets[ticketIndex],\n              state: true\n            }\n          });\n          console.log(this.state.edit);\n        } else if (control === 'member') {\n          let project = document.querySelector('.project-title h1').innerHTML;\n          this.setState({\n            edit: {\n              project: this.state.projects[this.state.projects.findIndex(object => {\n                return object.name === project;\n              })].contributor,\n              state: true\n            }\n          });\n        }\n      } else {\n        this.setState({\n          edit: {\n            project: '',\n            state: false\n          }\n        });\n      }\n    };\n    this.profileControl = control => {\n      this.setState({\n        profile: control\n      });\n    };\n    this.editUser = info => {\n      fetch('http://localhost:3000/edit_team', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/Json'\n        },\n        body: JSON.stringify({\n          oldEmail: this.state.user.email,\n          newFirst: info.firstName,\n          newLast: info.lastName,\n          newPhone: info.phone,\n          newEmail: info.email,\n          newPosition: info.position\n        })\n      }).then(res => res.json());\n      this.setState({\n        user: info\n      });\n      this.setState({\n        route: 'Dashboard'\n      });\n    };\n    this.editPassword = (old, newP) => {\n      fetch('http://localhost:3000/edit_password', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/Json'\n        },\n        body: JSON.stringify({\n          email: this.state.user.email,\n          oldPassword: old,\n          newPassword: newP\n        })\n      }).then(res => res.json());\n      this.setState({\n        route: 'Dashboard'\n      });\n    };\n    this.createProject = projectDetails => {\n      fetch('http://localhost:3000/projects', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/Json'\n        },\n        body: JSON.stringify({\n          name: projectDetails.name,\n          description: projectDetails.description,\n          contributor: projectDetails.contributor\n        })\n      }).then(res => res.json());\n      // .then(console.log())\n\n      this.setState(prevState => ({\n        projects: [...prevState.projects, projectDetails]\n      }));\n    };\n    this.loadProject = e => {\n      this.setState({\n        route: 'Projects'\n      });\n      let projectName = e.target.innerHTML;\n      this.state.projects.map(project => {\n        if (project.name === projectName) {\n          this.setState({\n            loadedProject: project\n          });\n        }\n      });\n      this.setState({\n        loadedTicket: {}\n      });\n    };\n    this.loadTicket = e => {\n      let ticketName = e.target.innerHTML;\n      this.state.loadedProject.tickets.map(ticket => {\n        if (ticket.ticketTitle === ticketName) {\n          this.setState({\n            loadedTicket: ticket\n          });\n        }\n      });\n    };\n    this.loadMember = e => {\n      let memberName = e.target.innerHTML;\n      this.state.team.map(member => {\n        if (member.firstName + ' ' + member.lastName === memberName) {\n          this.setState({\n            loadedMember: member\n          });\n        }\n      });\n    };\n    this.emptyMember = () => {\n      this.setState({\n        loadedMember: {}\n      });\n    };\n    this.addTeamMembers = teamMembers => {\n      let project = document.querySelector('.project-title h1').innerHTML;\n      let projectIndex = this.state.projects.findIndex(object => {\n        return object.name === project;\n      });\n      let allProjects = this.state.projects;\n      let projectState = allProjects[projectIndex];\n      let projectMembers = projectState.contributor;\n      teamMembers.forEach(member => {\n        if (!projectMembers.includes(member)) {\n          projectMembers.push(member);\n        }\n      });\n      projectState.contributor = projectMembers;\n      fetch('http://localhost:3000/edit_project', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/Json'\n        },\n        body: JSON.stringify({\n          project: project,\n          newName: projectState.name,\n          newDescription: projectState.description,\n          newContributor: projectState.contributor\n        })\n      }).then(res => res.json());\n      allProjects[projectIndex] = projectState;\n      this.setState({\n        projects: allProjects\n      });\n    };\n    this.createTicket = newTicket => {\n      let project = document.querySelector('.project-title h1').innerHTML;\n      let projectIndex = this.state.projects.findIndex(object => {\n        return object.name === project;\n      });\n      let allProjects = this.state.projects;\n      let projectState = allProjects[projectIndex];\n      let allTickets = projectState.tickets;\n      fetch('http://localhost:3000/tickets', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/Json'\n        },\n        body: JSON.stringify({\n          projectName: project,\n          ticketTitle: newTicket.ticketTitle,\n          author: newTicket.author,\n          description: newTicket.description,\n          status: newTicket.status,\n          priority: newTicket.priority,\n          type: newTicket.type,\n          time: newTicket.time,\n          assignedDevs: newTicket.assignedDevs\n        })\n      }).then(res => res.json());\n      allTickets.push(newTicket);\n      projectState.tickets = allTickets;\n      allProjects[projectIndex] = projectState;\n      this.setState({\n        projects: allProjects\n      });\n    };\n    this.deleteItem = (e, version) => {\n      let project;\n      let ticket;\n      let member;\n      let allProjects = this.state.projects;\n      if (version === 'project') {\n        project = e.target.parentNode.parentNode.firstChild.innerHTML;\n        let projectIndex = allProjects.findIndex(object => {\n          return object.name === project;\n        });\n        fetch('http://localhost:3000/delete_project', {\n          method: 'delete',\n          headers: {\n            'Content-Type': 'application/Json'\n          },\n          body: JSON.stringify({\n            projectName: project\n          })\n        }).then(res => res.json());\n        allProjects.splice(projectIndex, 1);\n        this.setState({\n          projects: allProjects\n        });\n      } else if (version === 'ticket') {\n        project = document.querySelector('.project-title h1').innerHTML;\n        ticket = e.target.parentNode.parentNode.firstChild.innerHTML;\n        let projectIndex = allProjects.findIndex(object => {\n          return object.name === project;\n        });\n        let allTickets = allProjects[projectIndex].tickets;\n        let ticketIndex = allTickets.findIndex(object => {\n          return object.ticketTitle === ticket;\n        });\n        fetch('http://localhost:3000/delete_ticket', {\n          method: 'delete',\n          headers: {\n            'Content-Type': 'application/Json'\n          },\n          body: JSON.stringify({\n            ticketName: ticket\n          })\n        }).then(res => res.json());\n        allTickets.splice(ticketIndex, 1);\n        this.setState({\n          projects: allProjects\n        });\n        this.setState({\n          loadedTicket: {}\n        });\n      } else if (version === 'member') {\n        project = document.querySelector('.project-title h1').innerHTML;\n        member = e.target.parentNode.parentNode.firstChild.innerHTML;\n        let projectIndex = allProjects.findIndex(object => {\n          return object.name === project;\n        });\n        let allMembers = allProjects[projectIndex].contributor;\n        let memberIndex = allMembers.indexOf(member);\n        allMembers.splice(memberIndex, 1);\n        fetch('http://localhost:3000/edit_project', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/Json'\n          },\n          body: JSON.stringify({\n            project: project,\n            newName: allProjects[projectIndex].name,\n            newDescription: allProjects[projectIndex].description,\n            newContributor: allMembers\n          })\n        }).then(res => res.json());\n        this.setState({\n          projects: allProjects\n        });\n      } else {\n        let member = this.state.loadedMember;\n        let allMembers = this.state.team;\n        let memberIndex = allMembers.findIndex(object => {\n          return object.name === member.name;\n        });\n        fetch('http://localhost:3000/delete_team', {\n          method: 'delete',\n          headers: {\n            'Content-Type': 'application/Json'\n          },\n          body: JSON.stringify({\n            email: member.email\n          })\n        }).then(res => res.json());\n        allMembers.splice(memberIndex, 1);\n        this.setState({\n          team: allMembers\n        });\n        this.setState({\n          loadedMember: {}\n        });\n      }\n    };\n    this.editItem = (version, state) => {\n      let project;\n      let allProjects = this.state.projects;\n      if (version === 'project') {\n        let projectIndex = allProjects.findIndex(object => {\n          return object.name === state.name;\n        });\n        project = allProjects[projectIndex];\n        fetch('http://localhost:3000/edit_project', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/Json'\n          },\n          body: JSON.stringify({\n            project: project.name,\n            newName: state.name,\n            newDescription: state.description,\n            newContributor: state.contributor\n          })\n        }).then(res => res.json());\n        project.name = state.name;\n        project.description = state.description;\n        project.contributor = state.contributor;\n        this.setState({\n          projects: allProjects\n        });\n      } else if (version === 'ticket') {\n        project = document.querySelector('.project-title h1').innerHTML;\n        let projectIndex = allProjects.findIndex(object => {\n          return object.name === project;\n        });\n        let allTickets = this.state.projects[projectIndex].tickets;\n        let ticketIndex = allTickets.findIndex(object => {\n          return object.ticketTitle === state.ticketTitle;\n        });\n        let ticket = allTickets[ticketIndex];\n        console.log(allTickets, ticketIndex, ticket, state);\n        fetch('http://localhost:3000/edit_ticket', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/Json'\n          },\n          body: JSON.stringify({\n            ticket: ticket.ticketTitle,\n            newTicketTitle: state.ticketTitle,\n            newAuthor: state.ticketTitle,\n            newDescription: state.description,\n            newStatus: state.status,\n            newPriority: state.priority,\n            newType: state.type,\n            newTime: state.time,\n            newAssignedDevs: state.assignedDevs\n          })\n        }).then(res => res.json());\n        ticket.ticketTitle = state.ticketTitle;\n        ticket.author = state.author;\n        ticket.description = state.description;\n        ticket.status = state.status;\n        ticket.priority = state.priority;\n        ticket.type = state.type;\n        ticket.time = state.time;\n        ticket.assignedDevs = state.assignedDevs;\n        this.setState({\n          projects: allProjects\n        });\n      } else {\n        let member = this.state.loadedMember;\n        let allMembers = this.state.team;\n        let memberIndex = allMembers.findIndex(object => {\n          return object.firstName === member.firstName;\n        });\n        fetch('http://localhost:3000/edit_team', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/Json'\n          },\n          body: JSON.stringify({\n            oldEmail: allMembers[memberIndex].email,\n            newFirst: state.firstName,\n            newLast: state.lastName,\n            newPhone: state.phone,\n            newEmail: state.email,\n            newPosition: state.position\n          })\n        }).then(res => res.json());\n        allMembers[memberIndex] = state;\n        this.setState({\n          team: allMembers\n        });\n        this.setState({\n          loadedMember: {}\n        });\n      }\n    };\n    this.commentAction = (e, action) => {\n      let project = document.querySelector('.project-title h1').innerHTML;\n      let ticket = document.querySelector('#ticket-name').innerHTML;\n      let projectIndex = this.state.projects.findIndex(object => {\n        return object.name === project;\n      });\n      let ticketIndex = this.state.projects[projectIndex].tickets.findIndex(object => {\n        return object.ticketTitle === ticket;\n      });\n      let comment;\n      let deletion;\n      action === 'add' ? comment = e.target.previousSibling.value : deletion = e.target.nextSibling.innerHTML;\n      let allProjects = this.state.projects;\n      let projectState = allProjects[projectIndex];\n      let allTickets = projectState.tickets;\n      let ticketState = projectState.tickets[ticketIndex];\n      let commentsState = ticketState.comments;\n      let commentIndex = commentsState.findIndex(object => {\n        return object.comment === deletion;\n      });\n      action === 'add' ? fetch('http://localhost:3000/comments', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/Json'\n        },\n        body: JSON.stringify({\n          ticketTitle: ticket,\n          user: this.state.user.firstName + ' ' + this.state.user.lastName,\n          date: new Date().toString().slice(0, -40),\n          comment: comment\n        })\n      }).then(res => res.json()) : fetch('http://localhost:3000/delete_comment', {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/Json'\n        },\n        body: JSON.stringify({\n          ticketName: ticket,\n          delText: deletion\n        })\n      }).then(res => res.json());\n      action === 'add' ? commentsState.push({\n        user: this.state.user.firstName + ' ' + this.state.user.lastName,\n        date: new Date().toString().slice(0, -40),\n        comment: comment\n      }) : commentsState.splice(commentIndex, 1);\n      let newTicketState = {\n        ticketTitle: ticketState.ticketTitle,\n        author: ticketState.author,\n        description: ticketState.description,\n        status: ticketState.status,\n        priority: ticketState.priority,\n        type: ticketState.type,\n        time: ticketState.time,\n        assignedDevs: ticketState.assignedDevs,\n        comments: commentsState\n      };\n      allTickets[ticketIndex] = newTicketState;\n      let newProjectState = {\n        name: projectState.name,\n        description: projectState.description,\n        contributor: projectState.contributor,\n        tickets: allTickets\n      };\n      allProjects[projectIndex] = newProjectState;\n      this.setState({\n        projects: allProjects\n      });\n      document.querySelector('.ticket-comment input').value = '';\n    };\n    this.state = {\n      user: {\n        id: '',\n        firstName: '',\n        lastName: '',\n        phone: '',\n        email: '',\n        position: ''\n      },\n      route: 'signin',\n      newForm: 'hidden',\n      profile: 'hidden',\n      edit: {\n        project: '',\n        state: false\n      },\n      projects: [],\n      team: [],\n      loadedProject: {},\n      loadedTicket: {},\n      loadedMember: {}\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        user: this.state.user,\n        routeChange: this.routeChange,\n        loadUser: this.loadUser,\n        loadProjectState: this.loadProjectState,\n        loadTeamState: this.loadTeamState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this) : this.state.route === 'register' ? /*#__PURE__*/_jsxDEV(Register, {\n        user: this.state.user,\n        routeChange: this.routeChange,\n        loadUser: this.loadUser,\n        loadProjectState: this.loadProjectState,\n        loadTeamState: this.loadTeamState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this) : this.state.newForm === 'project' ? /*#__PURE__*/_jsxDEV(NewProject, {\n        newFormControl: this.newFormControl,\n        projects: this.state.projects,\n        team: this.state.team,\n        createProject: this.createProject,\n        editItem: this.editItem,\n        edit: this.state.edit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this) : this.state.newForm === 'member' ? /*#__PURE__*/_jsxDEV(NewMember, {\n        newFormControl: this.newFormControl,\n        projects: this.state.projects,\n        team: this.state.team,\n        addTeamMembers: this.addTeamMembers,\n        editItem: this.editItem,\n        edit: this.state.edit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 9\n      }, this) : this.state.newForm === 'ticket' ? /*#__PURE__*/_jsxDEV(NewTicket, {\n        user: this.state.user,\n        newFormControl: this.newFormControl,\n        projects: this.state.projects,\n        team: this.state.team,\n        createTicket: this.createTicket,\n        editItem: this.editItem,\n        edit: this.state.edit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this) : this.state.profile === 'Show' ? /*#__PURE__*/_jsxDEV(Profile, {\n        user: this.state.user,\n        profileControl: this.profileControl,\n        editUser: this.editUser,\n        editPassword: this.editPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n        routeChange: this.routeChange,\n        user: this.state.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shadow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n          route: this.state.route,\n          user: this.state.user,\n          profileControl: this.profileControl,\n          routeChange: this.routeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 9\n        }, this), this.state.route === 'Dashboard' ? /*#__PURE__*/_jsxDEV(Dashboard, {\n          user: this.state.user,\n          projects: this.state.projects,\n          newFormControl: this.newFormControl,\n          loadProject: this.loadProject,\n          createProjectTitle: this.createProjectTitle,\n          deleteItem: this.deleteItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this) : this.state.route === 'Projects' ? /*#__PURE__*/_jsxDEV(Project, {\n          projects: this.state.projects,\n          team: this.state.team,\n          loadedProject: this.state.loadedProject,\n          loadedTicket: this.state.loadedTicket,\n          loadTicket: this.loadTicket,\n          commentAction: this.commentAction,\n          newFormControl: this.newFormControl,\n          deleteItem: this.deleteItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this) : this.state.route === 'Tickets' ? /*#__PURE__*/_jsxDEV(Tickets, {\n          user: this.state.user,\n          projects: this.state.projects,\n          loadProject: this.loadProject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Team, {\n          team: this.state.team,\n          loadedMember: this.state.loadedMember,\n          loadMember: this.loadMember,\n          editItem: this.editItem,\n          deleteItem: this.deleteItem,\n          emptyMember: this.emptyMember\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","SignIn","Register","Sidebar","Navbar","NewProject","NewMember","NewTicket","Profile","Dashboard","Project","Tickets","Team","jsxDEV","_jsxDEV","App","constructor","loadUser","data","setState","user","id","firstName","first_name","lastName","last_name","phone","email","position","loadProjectState","fetch","then","res","json","length","projects","loadTeamState","state","forEach","member","push","team","routeChange","route","newFormControl","e","control","edit","newForm","project","findIndex","object","name","target","parentNode","firstChild","innerHTML","document","querySelector","projectIndex","ticketIndex","tickets","ticketTitle","console","log","contributor","profileControl","profile","editUser","info","method","headers","body","JSON","stringify","oldEmail","newFirst","newLast","newPhone","newEmail","newPosition","editPassword","old","newP","oldPassword","newPassword","createProject","projectDetails","description","prevState","loadProject","projectName","map","loadedProject","loadedTicket","loadTicket","ticketName","ticket","loadMember","memberName","loadedMember","emptyMember","addTeamMembers","teamMembers","allProjects","projectState","projectMembers","includes","newName","newDescription","newContributor","createTicket","newTicket","allTickets","author","status","priority","type","time","assignedDevs","deleteItem","version","splice","allMembers","memberIndex","indexOf","editItem","newTicketTitle","newAuthor","newStatus","newPriority","newType","newTime","newAssignedDevs","commentAction","action","comment","deletion","previousSibling","value","nextSibling","ticketState","commentsState","comments","commentIndex","date","Date","toString","slice","delText","newTicketState","newProjectState","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","createProjectTitle"],"sources":["C:/Users/robdu/Desktop/port/bug/bug-tracker-v2/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport SignIn from './components/Signin';\nimport Register from './components/Register';\nimport Sidebar from './components/Sidebar';\nimport Navbar from './components/Navbar';\nimport NewProject from './components/NewProject';\nimport NewMember from './components/NewMember';\nimport NewTicket from './components/NewTicket';\nimport Profile from './components/Profile';\nimport Dashboard from './components/Dashboard';\nimport Project from './components/Project';\nimport Tickets from './components/Tickets';\nimport Team from './components/Team';\nimport './App.css'\n\n\nclass App extends Component {\n  constructor() {\n    super() \n    this.state = {\n    user: {\n      id: '',\n      firstName: '',\n      lastName: '',\n      phone: '',\n      email: '',\n      position: ''\n    },\n    route: 'signin',\n    newForm: 'hidden',\n    profile: 'hidden',\n    edit: {\n      project: '',\n      state: false\n    },    \n    projects : [],\n    team: [],\n    loadedProject: {},\n    loadedTicket: {},\n    loadedMember: {}\n  }\n  }\n\n  loadUser = (data) => {\n    this.setState({user : {\n      id: data.id,\n      firstName: data.first_name,\n      lastName: data.last_name,\n      phone: data.phone,\n      email: data.email,\n      position: data.position\n    }})\n  }\n\n  loadProjectState = () => {\n    fetch('http://localhost:3000/projects')\n        .then(res => res.json())\n        .then(\n            data => {\n            if(data.length > 0){\n            this.setState({projects: data})\n            }\n        }\n        )\n  }\n\n  loadTeamState = () => {\n    fetch('http://localhost:3000/team')\n        .then(res => res.json())\n        .then(\n            data => {\n            if(data.length > 0){\n                let state = []\n            data.forEach(member => {\n              state.push({\n                id: member.id,\n                firstName: member.first_name,\n                lastName: member.last_name,\n                phone: member.phone,\n                email: member.email,\n                position: member.position\n              })\n            })\n            this.setState({team: state})\n            }\n        }\n        )\n  }\n  \n\n  routeChange = (route) => {\n    this.setState({route: route})\n  }\n\n  newFormControl = (e, control, edit) => {\n    this.setState({newForm: control})\n    if(edit) { \n      if(control === 'project') {\n        this.setState({\n      edit: {\n        project: this.state.projects[this.state.projects.findIndex(object => {return object.name === e.target.parentNode.parentNode.firstChild.innerHTML})],\n        state: true\n    }}) \n      } else if(control === 'ticket') {\n        let project = document.querySelector('.project-title h1').innerHTML\n        let projectIndex = this.state.projects.findIndex(object => {return object.name === project})\n        let ticketIndex = this.state.projects[projectIndex].tickets.findIndex(object => {return object.ticketTitle === e.target.parentNode.parentNode.firstChild.innerHTML})\n        this.setState({\n          edit: {\n            project: this.state.projects[projectIndex].tickets[ticketIndex],\n            state: true\n        }})\n        console.log(this.state.edit);\n      } else if (control === 'member') {\n        let project = document.querySelector('.project-title h1').innerHTML\n        this.setState({\n          edit: {\n            project: this.state.projects[this.state.projects.findIndex(object => {return object.name === project})].contributor,\n            state: true\n          }\n        })\n      }       \n    } else {\n      this.setState({\n      edit: {\n        project: '',\n        state: false\n    }})\n    }\n  }\n\n  profileControl = (control) => {\n    this.setState({profile: control})\n  }\n\n  editUser = (info) => {\n    fetch('http://localhost:3000/edit_team', {\n            method: 'put',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                oldEmail: this.state.user.email,\n                newFirst: info.firstName,\n                newLast: info.lastName,\n                newPhone: info.phone,\n                newEmail: info.email,\n                newPosition: info.position \n            })\n        })\n        .then(res => res.json())\n\n    this.setState({user: info})\n     this.setState({route: 'Dashboard'})\n  }  \n\n  editPassword = (old, newP) => {\n    \n    fetch('http://localhost:3000/edit_password', {\n            method: 'put',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                email: this.state.user.email,\n                oldPassword: old,\n                newPassword: newP\n            })\n        })\n        .then(res => res.json())\n\n    this.setState({route: 'Dashboard'})\n  }\n\n  createProject = (projectDetails) => {\n    fetch('http://localhost:3000/projects', {\n            method: 'put',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                name: projectDetails.name,\n                description: projectDetails.description,\n                contributor: projectDetails.contributor\n            })\n        })\n        .then(res => res.json())\n        // .then(console.log())\n\n    this.setState(prevState => ({\n      projects: [...prevState.projects,\n        projectDetails]\n    }))\n  }\n\n  loadProject = (e) => {\n    this.setState({route: 'Projects'})\n\n    let projectName = e.target.innerHTML\n\n    this.state.projects.map(project => {\n      if(project.name === projectName) {                 \n        this.setState({loadedProject: project})\n      }\n    })\n    this.setState({loadedTicket: {}})\n  }\n  \n  loadTicket = (e) => {\n    let ticketName = e.target.innerHTML\n\n    this.state.loadedProject.tickets.map(ticket => {\n            if(ticket.ticketTitle === ticketName) {\n              this.setState({loadedTicket: ticket})\n            }\n          })\n  }\n\n  loadMember = (e) => {\n    let memberName = e.target.innerHTML\n\n    this.state.team.map(member => {\n      if(member.firstName + ' ' + member.lastName === memberName) {\n        this.setState({loadedMember: member})\n      }\n    })\n  }\n\n  emptyMember = () => {\n    this.setState({loadedMember: {}})\n  }  \n\n  addTeamMembers = (teamMembers) => {\n    let project = document.querySelector('.project-title h1').innerHTML\n    let projectIndex = this.state.projects.findIndex(object => {return object.name === project})\n    let allProjects = this.state.projects\n    let projectState = allProjects[projectIndex]\n    let projectMembers = projectState.contributor\n    teamMembers.forEach(member => {\n      if(!projectMembers.includes(member)) {\n        projectMembers.push(member)\n      }\n    })\n    projectState.contributor = projectMembers\n\n    fetch('http://localhost:3000/edit_project', {\n            method: 'put',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                project: project,\n                newName: projectState.name,\n                newDescription: projectState.description,\n                newContributor: projectState.contributor\n            })\n        })\n        .then(res => res.json())\n\n    allProjects[projectIndex] = projectState\n    this.setState({projects: allProjects})\n  }\n\n  createTicket = (newTicket) => {\n    let project = document.querySelector('.project-title h1').innerHTML\n    let projectIndex = this.state.projects.findIndex(object => {return object.name === project}) \n    let allProjects = this.state.projects\n    let projectState = allProjects[projectIndex]\n    let allTickets = projectState.tickets\n\n     fetch('http://localhost:3000/tickets', {\n            method: 'put',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                projectName: project,\n                ticketTitle: newTicket.ticketTitle,\n                author: newTicket.author,\n                description: newTicket.description,\n                status: newTicket.status,\n                priority: newTicket.priority,\n                type: newTicket.type,\n                time: newTicket.time,\n                assignedDevs: newTicket.assignedDevs\n            })\n        })\n        .then(res => res.json())\n\n    allTickets.push(newTicket)\n    projectState.tickets = allTickets\n\n    allProjects[projectIndex] = projectState\n\n    this.setState({projects: allProjects})\n  }\n\n  deleteItem = (e, version) => {\n    let project\n    let ticket\n    let member\n    let allProjects = this.state.projects\n\n    if(version === 'project') {\n      project = e.target.parentNode.parentNode.firstChild.innerHTML\n      let projectIndex = allProjects.findIndex(object => {return object.name === project}) \n\n      fetch('http://localhost:3000/delete_project', {\n            method: 'delete',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                projectName: project\n            })\n        })\n        .then(res => res.json())\n\n      allProjects.splice(projectIndex, 1)\n      this.setState({projects: allProjects})\n\n    } else if(version === 'ticket') {\n      project = document.querySelector('.project-title h1').innerHTML\n      ticket = e.target.parentNode.parentNode.firstChild.innerHTML\n      let projectIndex = allProjects.findIndex(object => {return object.name === project})   \n      let allTickets = allProjects[projectIndex].tickets  \n      let ticketIndex = allTickets.findIndex(object => {return object.ticketTitle === ticket})\n\n      fetch('http://localhost:3000/delete_ticket', {\n            method: 'delete',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                ticketName: ticket\n            })\n        })\n        .then(res => res.json())\n\n      allTickets.splice(ticketIndex, 1)\n      this.setState({projects: allProjects})\n       \n        this.setState({loadedTicket: {}})\n\n    } else if(version === 'member') {\n      project = document.querySelector('.project-title h1').innerHTML\n      member = e.target.parentNode.parentNode.firstChild.innerHTML\n      let projectIndex = allProjects.findIndex(object => {return object.name === project})   \n      let allMembers = allProjects[projectIndex].contributor\n      let memberIndex = allMembers.indexOf(member)\n      allMembers.splice(memberIndex, 1)\n\n      fetch('http://localhost:3000/edit_project', {\n            method: 'put',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                project: project,\n                newName: allProjects[projectIndex].name,\n                newDescription: allProjects[projectIndex].description,\n                newContributor: allMembers\n            })\n        })\n        .then(res => res.json())\n\n      this.setState({projects: allProjects})\n    } else {\n      let member = this.state.loadedMember\n      let allMembers = this.state.team\n      let memberIndex = allMembers.findIndex(object => {return object.name === member.name})\n\n      fetch('http://localhost:3000/delete_team', {\n            method: 'delete',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                email: member.email\n            })\n        })\n        .then(res => res.json())\n\n      allMembers.splice(memberIndex, 1)\n\n      this.setState({team: allMembers})\n      this.setState({loadedMember: {}})\n    }\n  }\n\n  editItem = (version, state) => {\n    let project\n    let allProjects = this.state.projects\n\n      if(version === 'project') {\n        let projectIndex = allProjects.findIndex(object => {return object.name === state.name})   \n        project = allProjects[projectIndex]\n\n        fetch('http://localhost:3000/edit_project', {\n            method: 'put',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                project: project.name,\n                newName: state.name,\n                newDescription: state.description,\n                newContributor: state.contributor\n            })\n        })\n        .then(res => res.json())\n\n        project.name = state.name\n        project.description = state.description\n        project.contributor = state.contributor\n        this.setState({projects: allProjects})\n      } else if(version === 'ticket') {\n        project = document.querySelector('.project-title h1').innerHTML\n        let projectIndex = allProjects.findIndex(object => {return object.name === project})   \n        let allTickets = this.state.projects[projectIndex].tickets\n        let ticketIndex = allTickets.findIndex(object => {return object.ticketTitle === state.ticketTitle})\n        let ticket = allTickets[ticketIndex]\n\n        console.log(allTickets, ticketIndex, ticket, state);\n\n        fetch('http://localhost:3000/edit_ticket', {\n            method: 'put',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                ticket: ticket.ticketTitle,\n                newTicketTitle: state.ticketTitle,\n                newAuthor: state.ticketTitle,\n                newDescription : state.description,\n                newStatus : state.status,\n                newPriority : state.priority,\n                newType : state.type,\n                newTime : state.time,\n                newAssignedDevs : state.assignedDevs  \n            })\n        })\n        .then(res => res.json())\n\n        ticket.ticketTitle = state.ticketTitle\n        ticket.author = state.author\n        ticket.description = state.description\n        ticket.status = state.status\n        ticket.priority = state.priority\n        ticket.type = state.type\n        ticket.time = state.time\n        ticket.assignedDevs = state.assignedDevs  \n        this.setState({projects: allProjects})    \n      } else {\n      let member = this.state.loadedMember\n      let allMembers = this.state.team\n      let memberIndex = allMembers.findIndex(object => {return object.firstName === member.firstName})\n\n      fetch('http://localhost:3000/edit_team', {\n            method: 'put',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                oldEmail: allMembers[memberIndex].email,\n                newFirst: state.firstName,\n                newLast: state.lastName,\n                newPhone: state.phone,\n                newEmail: state.email,\n                newPosition: state.position \n            })\n        })\n        .then(res => res.json())\n      \n      allMembers[memberIndex] = state  \n      this.setState({team: allMembers})\n      this.setState({loadedMember: {}})\n    }\n    }\n\n    commentAction = (e, action) => {\n    let project = document.querySelector('.project-title h1').innerHTML\n    let ticket = document.querySelector('#ticket-name').innerHTML\n    let projectIndex = this.state.projects.findIndex(object => {return object.name === project})\n    let ticketIndex = this.state.projects[projectIndex].tickets.findIndex(object => {return object.ticketTitle === ticket})    \n    let comment  \n    let deletion\n    \n    action === 'add' ? \n    comment = e.target.previousSibling.value :\n    deletion = e.target.nextSibling.innerHTML\n\n    let allProjects = this.state.projects\n    let projectState = allProjects[projectIndex]\n    let allTickets = projectState.tickets\n    let ticketState = projectState.tickets[ticketIndex]\n    let commentsState = ticketState.comments\n\n    let commentIndex = commentsState.findIndex(object => {return object.comment === deletion})\n\n    action === 'add' ? \n     fetch('http://localhost:3000/comments', {\n            method: 'put',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                ticketTitle: ticket,\n                user: this.state.user.firstName + ' ' + this.state.user.lastName,\n                date: new Date().toString().slice(0, -40),\n                comment: comment\n            })\n        })\n        .then(res => res.json()) :\n        fetch('http://localhost:3000/delete_comment', {\n            method: 'put',\n            headers: {'Content-Type': 'application/Json'},\n            body: JSON.stringify({\n                ticketName: ticket,\n                delText: deletion\n            })\n        })\n        .then(res => res.json())\n\n    action === 'add' ? \n    commentsState.push({\n        user: this.state.user.firstName + ' ' + this.state.user.lastName,\n        date: new Date().toString().slice(0, -40),\n        comment: comment\n      }) :      \n\n    commentsState.splice(commentIndex, 1)\n\n    let newTicketState =  {\n      ticketTitle: ticketState.ticketTitle,\n            author: ticketState.author,\n            description: ticketState.description,\n            status: ticketState.status,\n            priority: ticketState.priority,\n            type: ticketState.type,\n            time: ticketState.time,\n            assignedDevs: ticketState.assignedDevs,\n            comments: commentsState\n    }\n\n    allTickets[ticketIndex] = newTicketState\n\n    let newProjectState = {\n        name: projectState.name,\n        description: projectState.description,\n        contributor: projectState.contributor,\n        tickets: allTickets\n    }\n\n    allProjects[projectIndex] = newProjectState\n\n    this.setState({projects: allProjects})\n\n    document.querySelector('.ticket-comment input').value = ''\n  }\n\n   \n\n  render() { \n    return (\n      <div className='app'>\n        {this.state.route === 'signin' ?\n        <SignIn\n        user={this.state.user}\n        routeChange={this.routeChange} \n        loadUser={this.loadUser}\n        loadProjectState={this.loadProjectState}\n        loadTeamState={this.loadTeamState}\n        /> :\n        this.state.route === 'register' ?\n        <Register\n        user={this.state.user}\n        routeChange={this.routeChange}\n        loadUser={this.loadUser}\n        loadProjectState={this.loadProjectState}\n        loadTeamState={this.loadTeamState}\n        /> :        \n        this.state.newForm === 'project' ? \n        <NewProject \n        newFormControl={this.newFormControl} \n        projects={this.state.projects}\n        team={this.state.team} \n        createProject={this.createProject}\n        editItem={this.editItem}\n        edit={this.state.edit}\n        /> :\n        this.state.newForm === 'member' ?\n        <NewMember \n        newFormControl={this.newFormControl} \n        projects={this.state.projects}\n        team={this.state.team} \n        addTeamMembers={this.addTeamMembers}\n        editItem={this.editItem}\n        edit={this.state.edit}\n        /> : \n        this.state.newForm === 'ticket' ?\n        <NewTicket\n        user={this.state.user}\n        newFormControl={this.newFormControl} \n        projects={this.state.projects}\n        team={this.state.team} \n        createTicket={this.createTicket}\n        editItem={this.editItem}\n        edit={this.state.edit}\n        /> :\n        this.state.profile === 'Show' ?\n        <Profile\n        user={this.state.user}\n        profileControl={this.profileControl}\n        editUser={this.editUser} \n        editPassword={this.editPassword}\n        /> :\n        <div className='waste'></div>\n        }  \n        <Sidebar \n        routeChange={this.routeChange} \n        user={this.state.user} \n        />\n        <div className='main-container'>\n        <div className='shadow'></div>\n        <Navbar \n        route={this.state.route}\n        user={this.state.user}\n        profileControl={this.profileControl} \n        routeChange={this.routeChange} \n        />\n        {\n          this.state.route === 'Dashboard' ? \n          <Dashboard \n          user={this.state.user}\n          projects={this.state.projects} \n          newFormControl={this.newFormControl} \n          loadProject={this.loadProject} \n          createProjectTitle={this.createProjectTitle}\n          deleteItem={this.deleteItem}\n          /> :\n          this.state.route === 'Projects' ?\n          <Project \n          projects={this.state.projects} \n          team={this.state.team} \n          loadedProject={this.state.loadedProject} \n          loadedTicket={this.state.loadedTicket} \n          loadTicket={this.loadTicket}\n          commentAction={this.commentAction}\n          newFormControl={this.newFormControl}\n          deleteItem={this.deleteItem}\n          /> :\n          this.state.route === 'Tickets' ?\n          <Tickets\n          user={this.state.user}\n          projects={this.state.projects} \n          loadProject={this.loadProject} \n          /> :\n          <Team\n          team={this.state.team}\n          loadedMember={this.state.loadedMember}\n          loadMember={this.loadMember}\n          editItem={this.editItem}\n          deleteItem={this.deleteItem}\n          emptyMember={this.emptyMember}\n          />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n \nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}